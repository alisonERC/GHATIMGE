*
* GEN file for use with ANSWER-TIMES GAMS code
*
* ANSWER will replace the keywords below enclosed in <> brackets.
* Replacement does not occur if line starts with *.
* Keywords are case-sensitive. Possible keywords include:
*    <Run>, <IncludeDDLines>, <TPList>, <ParameterBandParameterE>,
*    <IncludeRATRULEDDLines>, <SetModelVariantLines>, 
*    <SetObjectiveFunctionLines>, <FIXBOHValue>, <TimeStep>, <Overlap>,
*    <ImportResultsIntoAnswer>, <SuppressPureZeroTSResults>
*    <SavepointLoadpointLines>, <G_DYEARValue>
*
$TITLE  NOBLE-SOFT ANSWER-TIMES VERSION 6.9.24 -- TIMES VERSION 4.3.3
OPTION LIMROW=0, LIMCOL=0, SOLPRINT=ON, ITERLIM=250000;
OPTION RESLIM=50000, PROFILE=1, SOLVEOPT=REPLACE;
*OPTION LP=CPLEX;
OPTION SYSOUT=ON;
$OFFLISTING
$ONEMPTY
*$ONLISTING

$SET SHELL 'ANSWER';

* Activate validation to force VAR_CAP/COMPRD and "square" obj costing.
$SET VALIDATE 'NO'

* Initialize the environment variables.
$SET DEBUG      'NO'
$SET SOLVE_NOW  'YES'
$SET DUMPSOL    'YES'
$SET MODEL_NAME 'TIMES'
$SET SOLVEDA    'YES'
*$SET VEDAVDD   'YES'
$SET VAR_UC    'YES'
* ANSWER allows maximum of 300 states of world
$SET MAXSOW    300

* ANSWER will set SOLANS to 'YES' or 'NO' according to whether or not ANSWER results files are required.
$SET SOLANS     '<ImportResultsIntoAnswer>'

* ANSWER will set SUPZERO to 'YES' or 'NO' according to whether or not pure zero time-series results are to be suppresed.
$SET SUPZERO    '<SuppressPureZeroTSResults>'

$SET REDUCE 'YES'
$IF DECLARED REG      $SET STARTRUN 'RESTART'
$IF NOT DECLARED REG  $SET STARTRUN 'SCRATCH'

* KILL old user values if running from restart
*$IF DECLARED REG  $BATINCLUDE initclr.mod

* Access some of the parameters in the VDA extension.
$SET VDA 'YES'

* ANSWER will automatically generate $SETs according to Model Variants and Objective Function Options selected by user.
<SetModelVariantLines>

* Unasterisk the line below to invoke the MICRO NLP Model Variant
*$SET MICRO YES

* Unasterisk the line(s) below to invoke the SPINES Model Variant
*$SET SPINES YES
*$SET SOLVEDA 1

<SetObjectiveFunctionLines>
* Unasterisk the line below to invoke the OBLONG Objective Function Option
*$SET OBLONG 'YES'
* Unasterisk the line below to invoke the OBJANN Objective Function Option
*$SET OBJANN 'YES'

* If DAMAGE, RETIRE control variables are not set, set them to the ANSWER-TIMES default of 'NO'.
$IF NOT SET DAMAGE $SET DAMAGE 'NO'
$IF NOT SET RETIRE $SET RETIRE 'NO'

*$SET BOTIME 1970

$SET PGPRIM "'ACTGRP'"
$SET RELAX_PRC_CG 'YES'

* Merge declarations & data.
$ONMULTI

* The times-slices MUST come 1st to ensure ordering OK.
* Now ANSWER-TIMES generates SET ALL_TS timeslice definitions in file <Run>_TS.DDS 
$INCLUDE <Run>_TS.DDS

* Perform fixed declarations.
$BATINCLUDE initsys.mod

* Declare the (system/user) empties.
$BATINCLUDE initmty.mod ier

* Following line is needed to put out UC_MARK.M in ANT file.
RPT_OPT('COMPRD','4') = 1;

* Convert 0 => EPS.
*$ONEPS

* Make declarations needed when TIMES DD is generated by ANSWER.
$INCLUDE MMINIT.ANS
* Accept the actual scenario data.
<IncludeDDLines>
* Include Rule-Based Constraint DDS's.
<IncludeRATRULEDDLines>

$SET RUN_NAME  '<Run>'

* Define the years for the run, and define Parameters B and E.
SET MILESTONYR / <TPList> /;
<ParameterBandParameterE>

* Transform sets, parameters in TIMES DD generated by ANSWER
* into sets, parameters in TIMES GAMS code.
$INCLUDE ANS2GAMS-DATAYEAR.ANS

* ANSWER will set G_DYEAR to the G_DYEAR database value.
G_DYEAR = <G_DYEARValue>;

* For a Time-Stepped Run, ANSWER will set G_OVERLAP to the G_OVERLAP value specified by the user.
$IF NOT '%TIMESTEP%' == '' G_OVERLAP = <Overlap>; display G_OVERLAP;

* Unasterisk the line below to set MIP optimality tolerance for an ETL/Discrete Investment/Discrete Retirement run. 
*OPTION OPTCR = 0.0;

* ANSWER will put out appropriate $SET SPOINT, $SET LPOINT lines 
* determined from Run Model Restart and Save options selected.
<SavepointLoadpointLines>

* Do the rest.
$BATINCLUDE maindrv.mod mod
