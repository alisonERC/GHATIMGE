* TI_SETS.ANS - written for TIMES

* determine TIMES set PASTYEAR from NCAP_PASTI/Y parameter
* (note that order of args in ANSWER's ANCAPPASTI/Y is (PRC,ALLYEAR)
* (while order of args in NCAP_PASTI/Y is (ALLYEAR,PRC)
PASTYEAR(ALLYEAR) = SUM((REG,PRC), ANCAPPASTI(REG,PRC,ALLYEAR)+ANCAPPASTY(REG,PRC,ALLYEAR)); 
*option PASTYEAR:0:0:1; display PASTYEAR;
MODLYEAR(ALLYEAR) = YES$(PASTYEAR(ALLYEAR) OR MILESTONYR(ALLYEAR));
*option MODLYEAR:0:0:1; display MODLYEAR;

* note that in what follows, it is essential to have $ on LHS, not RHS

* determine TIMES set COM_TMAP from ANSWER Commodity sub-groups 
COM_TMAP(REG,'DEM',COM)$COM_DEM(REG,COM) = YES;
COM_TMAP(REG,'NRG',COM)$COM_NRG(REG,COM) = YES;
COM_TMAP(REG,'MAT',COM)$COM_MAT(REG,COM) = YES;
COM_TMAP(REG,'ENV',COM)$COM_ENV(REG,COM) = YES;
COM_TMAP(REG,'FIN',COM)$COM_FIN(REG,COM) = YES;
*option COM_TMAP:0:0:1; display COM_TMAP;

* determine TIMES set DEM_SMAP from ANSWER Demand Commodity sub-groups 
DEM_SMAP(REG,'AGR',COM)$COM_DEMAGR(REG,COM) = YES;
DEM_SMAP(REG,'COM',COM)$COM_DEMCOM(REG,COM) = YES;
DEM_SMAP(REG,'IND',COM)$COM_DEMIND(REG,COM) = YES;
DEM_SMAP(REG,'NE',COM)$COM_DEMNE(REG,COM) = YES;
DEM_SMAP(REG,'OTH',COM)$COM_DEMOTH(REG,COM) = YES;
DEM_SMAP(REG,'RES',COM)$COM_DEMRES(REG,COM) = YES;
DEM_SMAP(REG,'TRN',COM)$COM_DEMTRN(REG,COM) = YES;
*option DEM_SMAP:0:0:1; display DEM_SMAP;

* determine TIMES set NRG_TMAP from ANSWER Energy Commodity sub-groups 
NRG_TMAP(REG,'CONSRV',COM)$COM_NRGCSV(REG,COM) = YES;
NRG_TMAP(REG,'ELC',COM)$COM_NRGELC(REG,COM) = YES;
NRG_TMAP(REG,'FOSSIL',COM)$COM_NRGFOS(REG,COM) = YES;
NRG_TMAP(REG,'HTHEAT',COM)$COM_NRGHTH(REG,COM) = YES;
NRG_TMAP(REG,'LIMRENEW',COM)$COM_NRGLIM(REG,COM) = YES;
NRG_TMAP(REG,'LTHEAT',COM)$COM_NRGLTH(REG,COM) = YES;
NRG_TMAP(REG,'NUCLR',COM)$COM_NRGNUC(REG,COM) = YES;
NRG_TMAP(REG,'SYNTH',COM)$COM_NRGSYN(REG,COM) = YES;
NRG_TMAP(REG,'FRERENEW',COM)$COM_NRGFRE(REG,COM) = YES;
*option NRG_TMAP:0:0:1; display NRG_TMAP;

* determine TIMES set ENV_MAP from ANSWER Environmental Commodity sub-groups 
ENV_MAP(REG,'GHG',COM)$COM_ENVGHG(REG,COM) = YES;
ENV_MAP(REG,'OTHENV',COM)$COM_ENVOTH(REG,COM) = YES;
*option ENV_MAP:0:0:1; display ENV_MAP;

* determine TIMES sets MAT_VOL, MAT_WT from ANSWER Commodity sub-groups 
MAT_VOL(REG,COM)$COM_MATVOL(REG,COM) = YES;
MAT_WT(REG,COM)$COM_MATWT(REG,COM) = YES;
*option MAT_VOL:0:0:1; display MAT_VOL;
*option MAT_WT:0:0:1; display MAT_WT;

* determine TIMES set COM_TSL from ANSWER Commodity Time Slice Level sub-groups
COM_TSL(REG,COM,'ANNUAL')$COM_ANNUAL(REG,COM) = YES;
COM_TSL(REG,COM,'SEASON')$COM_SEASON(REG,COM) = YES;
COM_TSL(REG,COM,'WEEKLY')$COM_WEEKLY(REG,COM) = YES;
COM_TSL(REG,COM,'DAYNITE')$COM_DAYNIT(REG,COM) = YES;
*option COM_TSL:0:0:1; display COM_TSL;


* determine TIMES set PRC_MAP from ANSWER Process sub-groups
PRC_MAP(REG,'XTRACT',PRC)$PRC_XTRACT(REG,PRC) = YES;
PRC_MAP(REG,'PRE',PRC)$PRC_PRE(REG,PRC) = YES;
PRC_MAP(REG,'PRW',PRC)$PRC_PRW(REG,PRC) = YES;
PRC_MAP(REG,'PRV',PRC)$PRC_PRV(REG,PRC) = YES;
PRC_MAP(REG,'REF',PRC)$PRC_REF(REG,PRC) = YES;
PRC_MAP(REG,'ELE',PRC)$PRC_ELE(REG,PRC) = YES;
PRC_MAP(REG,'HPL',PRC)$PRC_HPL(REG,PRC) = YES;
PRC_MAP(REG,'CHP',PRC)$PRC_CHP(REG,PRC) = YES;
PRC_MAP(REG,'DMD',PRC)$PRC_DMD(REG,PRC) = YES;
PRC_MAP(REG,'DISTR',PRC)$PRC_DISTR(REG,PRC) = YES;
PRC_MAP(REG,'STG',PRC)$PRC_STG(REG,PRC) = YES;
PRC_MAP(REG,'MISC',PRC)$PRC_MISC(REG,PRC) = YES;
PRC_MAP(REG,'RENEW',PRC)$PRC_RENEW(REG,PRC) = YES;
PRC_MAP(REG,'IRE',PRC)$PRC_IRE(REG,PRC) = YES;
PRC_MAP(REG,'STK',PRC)$PRC_STK(REG,PRC) = YES;
PRC_MAP(REG,'NST',PRC)$PRC_NST(REG,PRC) = YES;
*option PRC_MAP:0:0:1; display PRC_MAP;

** determine TIMES set PRC_RMAP FROM ANSWER Extraction Process sub-groups
*PRC_RMAP(REG,'BYPRD',PRC)$PRC_XTRBYP(REG,PRC) = YES;
*PRC_RMAP(REG,'ENHANCED',PRC)$PRC_XTRENH(REG,PRC) = YES;
*PRC_RMAP(REG,'HARVST',PRC)$PRC_XTRHAR(REG,PRC) = YES;
*PRC_RMAP(REG,'OFFSHR',PRC)$PRC_XTROFF(REG,PRC) = YES;
*PRC_RMAP(REG,'ONSHR',PRC)$PRC_XTRONS(REG,PRC) = YES;
*PRC_RMAP(REG,'STRIP',PRC)$PRC_XTRSTR(REG,PRC) = YES;
*PRC_RMAP(REG,'UNDRGRD',PRC)$PRC_XTRUND(REG,PRC) = YES;
**option PRC_RMAP:0:0:1; display PRC_RMAP;

* determine TIMES set PRC_TSL from ANSWER Process Time Slice Level sub-groups
PRC_TSL(REG,PRC,'ANNUAL')$PRC_ANNUAL(REG,PRC) = YES;
PRC_TSL(REG,PRC,'SEASON')$PRC_SEASON(REG,PRC) = YES;
PRC_TSL(REG,PRC,'WEEKLY')$PRC_WEEKLY(REG,PRC) = YES;
PRC_TSL(REG,PRC,'DAYNITE')$PRC_DAYNIT(REG,PRC) = YES;
*option PRC_TSL:0:0:1; display PRC_TSL;


* determine TIMES set TS_GROUP from ANSWER Time Slice sub-groups
TS_GROUP(REG,'ANNUAL',ALL_TS)$TS_ANNUAL(REG,ALL_TS) = YES;
TS_GROUP(REG,'SEASON',ALL_TS)$TS_SEASON(REG,ALL_TS) = YES;
TS_GROUP(REG,'WEEKLY',ALL_TS)$TS_WEEKLY(REG,ALL_TS) = YES;
TS_GROUP(REG,'DAYNITE',ALL_TS)$TS_DAYNITE(REG,ALL_TS) = YES;
*option TS_GROUP:0:0:1; display TS_GROUP;

